'use client'
import React, { useState } from 'react'
import { ModalClient, PINInput } from '@/core/components'

export default function ModalDemoPage() {
  const [isModalOpen, setIsModalOpen] = useState(false)
  const [isFullscreenModalOpen, setIsFullscreenModalOpen] = useState(false)
  const [isNoCloseButtonModalOpen, setIsNoCloseButtonModalOpen] =
    useState(false)
  const [isPINModalOpen, setIsPINModalOpen] = useState(false)
  const [pinValue, setPinValue] = useState('')
  const [pinComplete, setPinComplete] = useState(false)

  return (
    <div className="min-h-screen bg-gray-100 p-8">
      <div className="max-w-4xl mx-auto">
        <h1 className="text-3xl font-bold text-gray-900 mb-8">
          Modal Component Demo
        </h1>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {/* Basic Modal */}
          <div className="bg-white rounded-lg shadow-md p-6">
            <h2 className="text-xl font-semibold mb-4">Basic Modal</h2>
            <p className="text-gray-600 mb-4">
              Modal c∆° b·∫£n v·ªõi n√∫t ƒë√≥ng v√† backdrop
            </p>
            <button
              onClick={() => setIsModalOpen(true)}
              className="w-full bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition-colors"
            >
              M·ªü Modal
            </button>
          </div>

          {/* Fullscreen Modal */}
          <div className="bg-white rounded-lg shadow-md p-6">
            <h2 className="text-xl font-semibold mb-4">Fullscreen Modal</h2>
            <p className="text-gray-600 mb-4">
              Modal to√†n m√†n h√¨nh kh√¥ng c√≥ backdrop
            </p>
            <button
              onClick={() => setIsFullscreenModalOpen(true)}
              className="w-full bg-green-500 text-white py-2 px-4 rounded-md hover:bg-green-600 transition-colors"
            >
              M·ªü Fullscreen Modal
            </button>
          </div>

          {/* No Close Button Modal */}
          <div className="bg-white rounded-lg shadow-md p-6">
            <h2 className="text-xl font-semibold mb-4">No Close Button</h2>
            <p className="text-gray-600 mb-4">
              Modal kh√¥ng c√≥ n√∫t ƒë√≥ng (ch·ªâ ƒë√≥ng b·∫±ng ESC)
            </p>
            <button
              onClick={() => setIsNoCloseButtonModalOpen(true)}
              className="w-full bg-purple-500 text-white py-2 px-4 rounded-md hover:bg-purple-600 transition-colors"
            >
              M·ªü Modal (No Close Button)
            </button>
          </div>

          {/* PIN Input Modal */}
          <div className="bg-white rounded-lg shadow-md p-6">
            <h2 className="text-xl font-semibold mb-4">PIN Input Modal</h2>
            <p className="text-gray-600 mb-4">Modal v·ªõi PIN Input component</p>
            <button
              onClick={() => setIsPINModalOpen(true)}
              className="w-full bg-orange-500 text-white py-2 px-4 rounded-md hover:bg-orange-600 transition-colors"
            >
              M·ªü PIN Input Modal
            </button>
          </div>
        </div>

        {/* Mobile Test Info */}
        <div className="mt-8 bg-yellow-50 border border-yellow-200 rounded-lg p-4">
          <h3 className="text-lg font-semibold text-yellow-800 mb-2">
            üì± Test Mobile Animation
          </h3>
          <p className="text-yellow-700">
            ƒê·ªÉ test hi·ªáu ·ª©ng tr∆∞·ª£t t·ª´ d∆∞·ªõi l√™n tr√™n mobile, h√£y:
          </p>
          <ul className="list-disc list-inside text-yellow-700 mt-2 space-y-1">
            <li>M·ªü Developer Tools (F12)</li>
            <li>Chuy·ªÉn sang ch·∫ø ƒë·ªô mobile (Ctrl+Shift+M)</li>
            <li>Ch·ªçn m·ªôt thi·∫øt b·ªã mobile b·∫•t k·ª≥</li>
            <li>Nh·∫•n c√°c n√∫t modal ƒë·ªÉ xem hi·ªáu ·ª©ng tr∆∞·ª£t t·ª´ d∆∞·ªõi l√™n</li>
          </ul>
        </div>

        {/* Basic Modal */}
        <ModalClient open={isModalOpen} onClose={() => setIsModalOpen(false)}>
          <div className="p-6">
            <h2 className="text-2xl font-bold text-gray-900 mb-4">
              Basic Modal
            </h2>
            <p className="text-gray-600 mb-6">
              ƒê√¢y l√† modal c∆° b·∫£n v·ªõi hi·ªáu ·ª©ng framer motion. Tr√™n mobile s·∫Ω
              tr∆∞·ª£t t·ª´ d∆∞·ªõi l√™n, tr√™n desktop s·∫Ω c√≥ hi·ªáu ·ª©ng scale.
            </p>
            <div className="space-y-4">
              <div className="p-4 bg-blue-50 rounded-lg">
                <h3 className="font-semibold text-blue-900">T√≠nh nƒÉng:</h3>
                <ul className="list-disc list-inside text-blue-800 mt-2 space-y-1">
                  <li>Hi·ªáu ·ª©ng m·ªü/ƒë√≥ng m∆∞·ª£t m√†</li>
                  <li>ƒê√≥ng b·∫±ng ph√≠m ESC</li>
                  <li>Click backdrop ƒë·ªÉ ƒë√≥ng</li>
                  <li>Responsive design</li>
                </ul>
              </div>
              <button
                onClick={() => setIsModalOpen(false)}
                className="w-full bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition-colors"
              >
                ƒê√≥ng Modal
              </button>
            </div>
          </div>
        </ModalClient>

        {/* Fullscreen Modal */}
        <ModalClient
          open={isFullscreenModalOpen}
          onClose={() => setIsFullscreenModalOpen(false)}
          isFullscreen={true}
        >
          <div className="h-full bg-gradient-to-br from-purple-400 to-pink-400 flex items-center justify-center">
            <div className="text-center text-white">
              <h2 className="text-4xl font-bold mb-4">Fullscreen Modal</h2>
              <p className="text-xl mb-8">
                Modal to√†n m√†n h√¨nh kh√¥ng c√≥ backdrop
              </p>
              <button
                onClick={() => setIsFullscreenModalOpen(false)}
                className="bg-white text-purple-600 py-3 px-6 rounded-lg font-semibold hover:bg-gray-100 transition-colors"
              >
                ƒê√≥ng Modal
              </button>
            </div>
          </div>
        </ModalClient>

        {/* No Close Button Modal */}
        <ModalClient
          open={isNoCloseButtonModalOpen}
          onClose={() => setIsNoCloseButtonModalOpen(false)}
          showCloseButton={false}
        >
          <div className="p-6">
            <h2 className="text-2xl font-bold text-gray-900 mb-4">
              Modal Kh√¥ng C√≥ N√∫t ƒê√≥ng
            </h2>
            <p className="text-gray-600 mb-6">
              Modal n√†y kh√¥ng c√≥ n√∫t ƒë√≥ng. B·∫°n ch·ªâ c√≥ th·ªÉ ƒë√≥ng b·∫±ng ph√≠m ESC
              ho·∫∑c click backdrop.
            </p>
            <div className="space-y-4">
              <div className="p-4 bg-red-50 rounded-lg">
                <h3 className="font-semibold text-red-900">L∆∞u √Ω:</h3>
                <ul className="list-disc list-inside text-red-800 mt-2 space-y-1">
                  <li>Kh√¥ng c√≥ n√∫t X ·ªü g√≥c ph·∫£i</li>
                  <li>Ch·ªâ ƒë√≥ng ƒë∆∞·ª£c b·∫±ng ESC ho·∫∑c click backdrop</li>
                  <li>Ph√π h·ª£p cho c√°c modal quan tr·ªçng</li>
                </ul>
              </div>
              <button
                onClick={() => setIsNoCloseButtonModalOpen(false)}
                className="w-full bg-red-500 text-white py-2 px-4 rounded-md hover:bg-red-600 transition-colors"
              >
                ƒê√≥ng Modal
              </button>
            </div>
          </div>
        </ModalClient>

        {/* PIN Input Modal */}
        <ModalClient
          open={isPINModalOpen}
          onClose={() => {
            setIsPINModalOpen(false)
            setPinValue('')
            setPinComplete(false)
          }}
        >
          <div className="p-6">
            <h2 className="text-2xl font-bold text-gray-900 mb-4">
              PIN Input Demo
            </h2>
            <p className="text-gray-600 mb-6">
              Nh·∫≠p m√£ PIN 6 s·ªë. B·∫°n c√≥ th·ªÉ paste m√£ PIN t·ª´ clipboard.
            </p>

            <div className="space-y-6">
              {/* PIN Input */}
              <div className="flex justify-center">
                <PINInput
                  length={6}
                  value={pinValue}
                  onChange={(value) => {
                    setPinValue(value)
                    setPinComplete(false)
                  }}
                  onComplete={(value) => {
                    setPinComplete(true)
                    console.log('PIN completed:', value)
                  }}
                  className="gap-3"
                  inputClassName="w-14 h-14 text-2xl"
                />
              </div>

              {/* Status */}
              <div className="text-center">
                {pinComplete ? (
                  <div className="p-4 bg-green-50 border border-green-200 rounded-lg">
                    <p className="text-green-800 font-semibold">
                      ‚úÖ PIN ƒë√£ ƒë∆∞·ª£c nh·∫≠p ƒë·∫ßy ƒë·ªß: {pinValue}
                    </p>
                  </div>
                ) : (
                  <div className="p-4 bg-gray-50 border border-gray-200 rounded-lg">
                    <p className="text-gray-600">
                      ƒê√£ nh·∫≠p: {pinValue.length}/6 s·ªë
                    </p>
                  </div>
                )}
              </div>

              {/* Features Info */}
              <div className="p-4 bg-blue-50 rounded-lg">
                <h3 className="font-semibold text-blue-900 mb-2">T√≠nh nƒÉng:</h3>
                <ul className="list-disc list-inside text-blue-800 space-y-1 text-sm">
                  <li>Ch·ªâ cho ph√©p nh·∫≠p s·ªë</li>
                  <li>H·ªó tr·ª£ paste t·ª´ clipboard</li>
                  <li>T·ª± ƒë·ªông focus √¥ ti·∫øp theo</li>
                  <li>H·ªó tr·ª£ ph√≠m m≈©i t√™n ƒë·ªÉ di chuy·ªÉn</li>
                  <li>Backspace ƒë·ªÉ x√≥a v√† quay l·∫°i √¥ tr∆∞·ªõc</li>
                  <li>B·∫Øt s·ª± ki·ªán khi nh·∫≠p ƒë·ªß s·ªë</li>
                </ul>
              </div>

              {/* Test Paste */}
              <div className="p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
                <h3 className="font-semibold text-yellow-800 mb-2">
                  üß™ Test Paste:
                </h3>
                <p className="text-yellow-700 text-sm mb-2">
                  Copy m√£ n√†y v√† paste v√†o PIN input:{' '}
                  <code className="bg-yellow-100 px-2 py-1 rounded">
                    123456
                  </code>
                </p>
                <button
                  onClick={() => {
                    navigator.clipboard.writeText('123456')
                    alert(
                      'ƒê√£ copy "123456" v√†o clipboard! B√¢y gi·ªù paste v√†o PIN input.'
                    )
                  }}
                  className="text-yellow-800 underline text-sm hover:text-yellow-900"
                >
                  Copy m√£ test
                </button>
              </div>

              <button
                onClick={() => {
                  setIsPINModalOpen(false)
                  setPinValue('')
                  setPinComplete(false)
                }}
                className="w-full bg-orange-500 text-white py-2 px-4 rounded-md hover:bg-orange-600 transition-colors"
              >
                ƒê√≥ng Modal
              </button>
            </div>
          </div>
        </ModalClient>
      </div>
    </div>
  )
}
