import React, { useMemo, useId } from 'react'

const STAR_PATHS = [
  'M29.3125 14.2975L23.675 19.2175L25.3637 26.5425C25.4531 26.9254 25.4276 27.3262 25.2904 27.6947C25.1533 28.0632 24.9105 28.3831 24.5925 28.6144C24.2745 28.8457 23.8954 28.9782 23.5025 28.9951C23.1097 29.0121 22.7205 28.913 22.3837 28.71L15.995 24.835L9.61999 28.71C9.2832 28.913 8.89406 29.0121 8.50121 28.9951C8.10836 28.9782 7.72923 28.8457 7.41123 28.6144C7.09324 28.3831 6.85047 28.0632 6.7133 27.6947C6.57613 27.3262 6.55063 26.9254 6.63999 26.5425L8.32624 19.225L2.68749 14.2975C2.38925 14.0403 2.17359 13.7007 2.06756 13.3214C1.96153 12.9421 1.96984 12.54 2.09146 12.1654C2.21307 11.7908 2.44258 11.4604 2.75119 11.2158C3.0598 10.9711 3.43379 10.823 3.82624 10.79L11.2587 10.1462L14.16 3.22624C14.3115 2.86314 14.5671 2.55298 14.8945 2.33482C15.2219 2.11665 15.6065 2.00024 16 2.00024C16.3934 2.00024 16.7781 2.11665 17.1055 2.33482C17.4329 2.55298 17.6885 2.86314 17.84 3.22624L20.75 10.1462L28.18 10.79C28.5724 10.823 28.9464 10.9711 29.255 11.2158C29.5637 11.4604 29.7932 11.7908 29.9148 12.1654C30.0364 12.54 30.0447 12.9421 29.9387 13.3214C29.8326 13.7007 29.617 14.0403 29.3187 14.2975H29.3125Z',
  'M65.3125 14.2975L59.675 19.2175L61.3637 26.5425C61.4531 26.9254 61.4276 27.3262 61.2904 27.6947C61.1533 28.0632 60.9105 28.3831 60.5925 28.6144C60.2745 28.8457 59.8954 28.9782 59.5025 28.9951C59.1097 29.0121 58.7205 28.913 58.3837 28.71L51.995 24.835L45.62 28.71C45.2832 28.913 44.8941 29.0121 44.5012 28.9951C44.1084 28.9782 43.7292 28.8457 43.4112 28.6144C43.0932 28.3831 42.8505 28.0632 42.7133 27.6947C42.5761 27.3262 42.5506 26.9254 42.64 26.5425L44.3262 19.225L38.6875 14.2975C38.3893 14.0403 38.1736 13.7007 38.0676 13.3214C37.9615 12.9421 37.9698 12.54 38.0915 12.1654C38.2131 11.7908 38.4426 11.4604 38.7512 11.2158C39.0598 10.9711 39.4338 10.823 39.8262 10.79L47.2587 10.1462L50.16 3.22624C50.3115 2.86314 50.5671 2.55298 50.8945 2.33482C51.2219 2.11665 51.6065 2.00024 52 2.00024C52.3934 2.00024 52.7781 2.11665 53.1055 2.33482C53.4329 2.55298 53.6885 2.86314 53.84 3.22624L56.75 10.1462L64.18 10.79C64.5724 10.823 64.9464 10.9711 65.255 11.2158C65.5637 11.4604 65.7932 11.7908 65.9148 12.1654C66.0364 12.54 66.0447 12.9421 65.9387 13.3214C65.8326 13.7007 65.617 14.0403 65.3187 14.2975H65.3125Z',
  'M101.312 14.2975L95.675 19.2175L97.3637 26.5425C97.4531 26.9254 97.4276 27.3262 97.2904 27.6947C97.1533 28.0632 96.9105 28.3831 96.5925 28.6144C96.2745 28.8457 95.8954 28.9782 95.5025 28.9951C95.1097 29.0121 94.7205 28.913 94.3837 28.71L87.995 24.835L81.62 28.71C81.2832 28.913 80.8941 29.0121 80.5012 28.9951C80.1084 28.9782 79.7292 28.8457 79.4112 28.6144C79.0932 28.3831 78.8505 28.0632 78.7133 27.6947C78.5761 27.3262 78.5506 26.9254 78.64 26.5425L80.3262 19.225L74.6875 14.2975C74.3893 14.0403 74.1736 13.7007 74.0676 13.3214C73.9615 12.9421 73.9698 12.54 74.0915 12.1654C74.2131 11.7908 74.4426 11.4604 74.7512 11.2158C75.0598 10.9711 75.4338 10.823 75.8262 10.79L83.2587 10.1462L86.16 3.22624C86.3115 2.86314 86.5671 2.55298 86.8945 2.33482C87.2219 2.11665 87.6065 2.00024 88 2.00024C88.3934 2.00024 88.7781 2.11665 89.1055 2.33482C89.4329 2.55298 89.6885 2.86314 89.84 3.22624L92.75 10.1462L100.18 10.79C100.572 10.823 100.946 10.9711 101.255 11.2158C101.564 11.4604 101.793 11.7908 101.915 12.1654C102.036 12.54 102.045 12.9421 101.939 13.3214C101.833 13.7007 101.617 14.0403 101.319 14.2975H101.312Z',
  'M137.312 14.2975L131.675 19.2175L133.364 26.5425C133.453 26.9254 133.428 27.3262 133.29 27.6947C133.153 28.0632 132.91 28.3831 132.592 28.6144C132.274 28.8457 131.895 28.9782 131.503 28.9951C131.11 29.0121 130.721 28.913 130.384 28.71L123.995 24.835L117.62 28.71C117.283 28.913 116.894 29.0121 116.501 28.9951C116.108 28.9782 115.729 28.8457 115.411 28.6144C115.093 28.3831 114.85 28.0632 114.713 27.6947C114.576 27.3262 114.551 26.9254 114.64 26.5425L116.326 19.225L110.687 14.2975C110.389 14.0403 110.174 13.7007 110.068 13.3214C109.962 12.9421 109.97 12.54 110.091 12.1654C110.213 11.7908 110.443 11.4604 110.751 11.2158C111.06 10.9711 111.434 10.823 111.826 10.79L119.259 10.1462L122.16 3.22624C122.311 2.86314 122.567 2.55298 122.894 2.33482C123.222 2.11665 123.607 2.00024 124 2.00024C124.393 2.00024 124.778 2.11665 125.106 2.33482C125.433 2.55298 125.688 2.86314 125.84 3.22624L128.75 10.1462L136.18 10.79C136.572 10.823 136.946 10.9711 137.255 11.2158C137.564 11.4604 137.793 11.7908 137.915 12.1654C138.036 12.54 138.045 12.9421 137.939 13.3214C137.833 13.7007 137.617 14.0403 137.319 14.2975H137.312Z',
  'M173.312 14.2975L167.675 19.2175L169.364 26.5425C169.453 26.9254 169.428 27.3262 169.29 27.6947C169.153 28.0632 168.91 28.3831 168.592 28.6144C168.274 28.8457 167.895 28.9782 167.503 28.9951C167.11 29.0121 166.721 28.913 166.384 28.71L159.995 24.835L153.62 28.71C153.283 28.913 152.894 29.0121 152.501 28.9951C152.108 28.9782 151.729 28.8457 151.411 28.6144C151.093 28.3831 150.85 28.0632 150.713 27.6947C150.576 27.3262 150.551 26.9254 150.64 26.5425L152.326 19.225L146.687 14.2975C146.389 14.0403 146.174 13.7007 146.068 13.3214C145.962 12.9421 145.97 12.54 146.091 12.1654C146.213 11.7908 146.443 11.4604 146.751 11.2158C147.06 10.9711 147.434 10.823 147.826 10.79L155.259 10.1462L158.16 3.22624C158.311 2.86314 158.567 2.55298 158.894 2.33482C159.222 2.11665 159.607 2.00024 160 2.00024C160.393 2.00024 160.778 2.11665 161.106 2.33482C161.433 2.55298 161.688 2.86314 161.84 3.22624L164.75 10.1462L172.18 10.79C172.572 10.823 172.946 10.9711 173.255 11.2158C173.564 11.4604 173.793 11.7908 173.915 12.1654C174.036 12.54 174.045 12.9421 173.939 13.3214C173.833 13.7007 173.617 14.0403 173.319 14.2975H173.312Z',
]

const Rating = ({
  rate = 0,
  className = '',
  totalStars = 5,
  filledColor = '#FACA4A',
  emptyColor = '#D1D5DB',
}) => {
  const uid = useId()
  const clamped = useMemo(
    () => Math.max(0, Math.min(rate, totalStars)),
    [rate, totalStars]
  )
  const stars = useMemo(
    () => Array.from({ length: totalStars }, (_, i) => i + 1),
    [totalStars]
  )

  return (
    <svg
      className={className}
      width="176"
      height="32"
      viewBox="0 0 176 32"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      aria-label={`${clamped} out of ${totalStars} stars`}
      role="img"
    >
      {stars.map((star, idx) => {
        const full =
          clamped >= star ? 1 : clamped <= star - 1 ? 0 : clamped - (star - 1) // 0..1
        const path = STAR_PATHS[idx] // dùng đúng path theo vị trí ngôi sao

        // Nếu là sao tô một phần, dùng linearGradient theo phần trăm chiều ngang
        if (full > 0 && full < 1) {
          const gradId = `star-grad-${uid}-${idx}`
          const percent = (full * 100).toFixed(2) + '%'

          return (
            <g key={idx}>
              <defs>
                <linearGradient id={gradId} x1="0%" y1="0%" x2="100%" y2="0%">
                  <stop offset="0%" stopColor={filledColor} />
                  <stop offset={percent} stopColor={filledColor} />
                  <stop offset={percent} stopColor={emptyColor} />
                  <stop offset="100%" stopColor={emptyColor} />
                </linearGradient>
              </defs>
              <path d={path} fill={`url(#${gradId})`} />
            </g>
          )
        }

        // Full / empty
        const fillColor = full === 1 ? filledColor : emptyColor
        return <path key={idx} d={path} fill={fillColor} />
      })}
    </svg>
  )
}

export default Rating
