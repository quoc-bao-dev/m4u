'use client'

import { Container } from '@/core/components'
import React from 'react'
import RewardCard from './RewardCard'

const RewardSection = () => {
  const [activeIndex, setActiveIndex] = React.useState<number | null>(null)

  return (
    <div className="py-[96px]">
      <h1 className="text-[32px] md:text-[64px] text-gray-700 font-bold text-center">
        ✨ Khám phá những ưu đãi đặc biệt
      </h1>
      <p className="text-[18px] md:text-[24px] text-gray-700 text-center">
        Trải nghiệm các sản phẩm hot nhất mà không tốn một xu.
      </p>

      <div className="pt-20"></div>
      <Container className="max-w-full md:max-w-[1150px] px-4">
        <div className="mt-10 relative flex  md:flex-row items-stretch justify-between gap-4 md:gap-10 w-full">
          {/* Elastic connector between the first two cards */}

          <div
            className={`transition-transform duration-200 ease-out  ${
              activeIndex !== null && activeIndex !== 0
                ? 'md:translate-x-6'
                : ''
            }`}
          >
            <RewardCard
              icon={
                <span>
                  <IconTag />
                </span>
              }
              label="Giảm giá sản phẩm"
              title="50%"
              bgColor="bg-[#E8FBF5]"
              iconColor="text-emerald-500"
              isActive={activeIndex === 0}
              isDimmed={activeIndex !== null && activeIndex !== 0}
              onMouseEnter={() => setActiveIndex(0)}
              onMouseLeave={() => setActiveIndex(null)}
              baseRotate={0}
              rotateOnHover={0}
            />
          </div>

          <div
            className={`transition-transform duration-200 ease-out ${
              activeIndex !== null && activeIndex !== 1
                ? 'md:translate-x-6'
                : ''
            }`}
          >
            <RewardCard
              icon={
                <span>
                  <IconVoucher />
                </span>
              }
              label="Voucher mua hàng"
              title="9,000+"
              bgColor="bg-[#FDEAB7]"
              iconColor="text-amber-500"
              isActive={activeIndex === 1}
              isDimmed={activeIndex !== null && activeIndex !== 1}
              onMouseEnter={() => setActiveIndex(1)}
              onMouseLeave={() => setActiveIndex(null)}
              baseRotate={-10}
              rotateOnHover={-8}
            />
          </div>

          <div
            className={`transition-transform duration-200 ease-out ${
              activeIndex !== null && activeIndex !== 2
                ? 'md:translate-x-6'
                : ''
            }`}
          >
            <RewardCard
              icon={
                <span>
                  <IconHand />
                </span>
              }
              label="Chiết khấu lên đến"
              title="20%"
              bgColor="bg-[#E7F7FE]"
              iconColor="text-sky-500"
              isActive={activeIndex === 2}
              isDimmed={activeIndex !== null && activeIndex !== 2}
              onMouseEnter={() => setActiveIndex(2)}
              onMouseLeave={() => setActiveIndex(null)}
              baseRotate={0}
              disableElastic
              rotateOnHover={-8}
              activeScale={activeIndex === 2 ? 1.08 : 1.05}
            />
          </div>
        </div>
      </Container>
    </div>
  )
}

const IconHand = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      className="size-[16px] md:size-[31px]"
      viewBox="0 0 36 28"
      fill="none"
    >
      <path
        d="M20.1001 5.24936C20.2204 4.38234 20.5635 3.56134 21.0959 2.8665C21.6282 2.17166 22.3316 1.62672 23.1374 1.28487C23.9433 0.943032 24.8239 0.815968 25.6935 0.916087C26.5631 1.01621 27.3919 1.34008 28.0989 1.85611C28.1797 1.91687 28.2425 1.99825 28.2809 2.0917C28.3193 2.18515 28.3319 2.28721 28.3172 2.38718C28.3025 2.48714 28.2612 2.58131 28.1976 2.65979C28.134 2.73827 28.0504 2.79816 27.9556 2.83317C26.6348 3.32569 25.4844 4.18902 24.6423 5.31948C23.8003 6.44994 23.3026 7.79944 23.2088 9.20591C23.198 9.37009 23.1872 9.53426 23.1934 9.69674C23.1944 9.79925 23.1674 9.90008 23.1152 9.98835C23.0631 10.0766 22.9878 10.149 22.8976 10.1976C22.8073 10.2462 22.7055 10.2692 22.6031 10.2641C22.5007 10.259 22.4017 10.2261 22.3167 10.1688C21.5209 9.64129 20.8905 8.89948 20.4983 8.02902C20.1061 7.15856 19.9681 6.19493 20.1001 5.24936ZM34.8482 20.7701C34.8079 21.4116 34.5887 22.0291 34.2154 22.5525C33.8422 23.0759 33.3298 23.4842 32.7363 23.7313L32.6727 23.7553L27.071 25.7169C27.0156 25.7371 26.9585 25.7522 26.9003 25.762L17.7718 27.415C17.6813 27.432 17.5891 27.4378 17.4973 27.4321L2.90395 26.4699C2.30851 26.4306 1.75305 26.1564 1.35977 25.7076C0.966486 25.2588 0.767601 24.6721 0.806864 24.0767L1.17696 18.4639C1.21622 17.8684 1.49042 17.313 1.93922 16.9197C2.38803 16.5264 2.97468 16.3275 3.57012 16.3668L7.59591 16.6323L10.9793 13.6661C11.4231 13.2755 11.9399 12.9767 12.4998 12.7869C13.0597 12.5972 13.6517 12.5203 14.2415 12.5607L21.2659 13.0239C21.8589 13.0629 22.4353 13.2356 22.952 13.5291C23.4687 13.8226 23.9123 14.2293 24.2495 14.7186C24.5867 15.2079 24.8087 15.7672 24.899 16.3545C24.9893 16.9419 24.9455 17.542 24.7709 18.11L30.7309 17.1473C31.2509 17.0456 31.7874 17.0647 32.2988 17.2031C32.8103 17.3416 33.2832 17.5956 33.681 17.9456C34.0788 18.2956 34.3909 18.7323 34.5932 19.222C34.7956 19.7117 34.8828 20.2413 34.8482 20.7701ZM32.6031 20.622C32.6151 20.4364 32.5843 20.2505 32.5129 20.0787C32.4415 19.907 32.3314 19.754 32.1913 19.6316C32.0513 19.5092 31.8849 19.4208 31.7051 19.3731C31.5252 19.3255 31.3369 19.3199 31.1546 19.3568L31.1103 19.3652L21.5663 20.9076C21.4826 20.9206 21.3978 20.9244 21.3133 20.9191L16.8188 20.6227C16.5211 20.6031 16.2434 20.466 16.0467 20.2416C15.8501 20.0172 15.7506 19.7239 15.7703 19.4261C15.7899 19.1284 15.927 18.8507 16.1514 18.654C16.3758 18.4574 16.6691 18.358 16.9669 18.3776L20.8958 18.6367C21.3424 18.6661 21.7824 18.5169 22.119 18.222C22.4556 17.927 22.6612 17.5104 22.6907 17.0639C22.7201 16.6173 22.571 16.1773 22.276 15.8407C21.9811 15.5041 21.5645 15.2984 21.1179 15.269L14.0934 14.8058C13.7986 14.7854 13.5026 14.8238 13.2227 14.9189C12.9428 15.0139 12.6846 15.1636 12.463 15.3593L9.07829 18.3239L8.6648 24.5948L17.505 25.1777L26.4096 23.565L31.8915 21.6462C32.0923 21.5567 32.2648 21.414 32.3902 21.2334C32.5157 21.0529 32.5893 20.8414 32.6031 20.622ZM25.454 9.35395C25.3881 10.3531 25.6199 11.3492 26.1202 12.2166C26.6205 13.0839 27.3668 13.7834 28.2646 14.2266C29.1624 14.6698 30.1715 14.8368 31.1643 14.7065C32.1571 14.5762 33.0889 14.1544 33.8419 13.4945C34.595 12.8347 35.1354 11.9663 35.395 10.9992C35.6545 10.0322 35.6214 9.00989 35.3 8.06164C34.9785 7.11338 34.383 6.28175 33.5889 5.6719C32.7948 5.06206 31.8377 4.70139 30.8386 4.63551C29.4988 4.54717 28.1789 4.99466 27.169 5.87954C26.1592 6.76442 25.5423 8.0142 25.454 9.35395Z"
        fill="#12AFF0"
      />
    </svg>
  )
}

const IconVoucher = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      className="size-[16px] md:size-[31px]"
      viewBox="0 0 34 26"
      fill="none"
    >
      <path
        d="M30.6173 8.11158C31.1095 7.94821 31.5302 7.61979 31.8082 7.18191C32.0861 6.74403 32.2043 6.22357 32.1426 5.7086L31.7259 2.24467C31.6546 1.6522 31.3509 1.11232 30.8815 0.743778C30.4122 0.375241 29.8157 0.208242 29.2232 0.279517L2.41651 3.50445C1.82405 3.57572 1.28416 3.87944 0.915627 4.34877C0.54709 4.81811 0.38009 5.41462 0.451366 6.00709L0.868087 9.47101C0.930318 9.98592 1.16852 10.4635 1.5424 10.823C1.91627 11.1824 2.40285 11.4017 2.9198 11.4437C3.69313 11.5094 4.42018 11.8396 4.97849 12.3787C5.5368 12.9178 5.89224 13.6329 5.98494 14.4034C6.07764 15.174 5.90194 15.953 5.48742 16.6091C5.07291 17.2653 4.44492 17.7585 3.70924 18.0057C3.21607 18.1694 2.79476 18.4987 2.51684 18.9378C2.23892 19.3768 2.12153 19.8985 2.1846 20.4143L2.60132 23.8782C2.6726 24.4707 2.97631 25.0106 3.44564 25.3791C3.91498 25.7477 4.51149 25.9147 5.10396 25.8434L31.9107 22.6184C32.5031 22.5472 33.043 22.2435 33.4116 21.7741C33.7801 21.3048 33.9471 20.7083 33.8758 20.1158L33.4591 16.6519C33.3969 16.137 33.1587 15.6594 32.7848 15.2999C32.4109 14.9404 31.9243 14.7212 31.4074 14.6792C30.6341 14.6135 29.907 14.2833 29.3487 13.7442C28.7904 13.2051 28.4349 12.49 28.3422 11.7195C28.2495 10.9489 28.4252 10.1699 28.8398 9.51378C29.2543 8.85764 29.8823 8.3644 30.6179 8.11716L30.6173 8.11158ZM4.41866 20.1469C5.64946 19.7381 6.70118 18.9166 7.39578 17.8213C8.09038 16.7261 8.38518 15.4245 8.23027 14.1369C8.07537 12.8492 7.48027 11.6547 6.54573 10.7554C5.61119 9.85619 4.39462 9.30751 3.10198 9.20227L2.68526 5.73834L10.5039 4.79774L12.6538 22.6689L4.83521 23.6095L4.41866 20.1469Z"
        fill="#FACA4A"
      />
    </svg>
  )
}
const IconTag = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 31 31"
      fill="none"
      className="size-[16px] md:size-[31px]"
    >
      <path
        d="M29.9679 14.9583L16.0025 0.992794C15.7943 0.782953 15.5465 0.616585 15.2734 0.503362C15.0004 0.390139 14.7076 0.332319 14.412 0.333263L1.37745 0.333263C1.07908 0.333263 0.792936 0.45179 0.581958 0.662768C0.370979 0.873747 0.252453 1.15989 0.252453 1.45826L0.252453 14.4928C0.251508 14.7884 0.309328 15.0812 0.422552 15.3542C0.535775 15.6273 0.702143 15.8751 0.911984 16.0833L14.8775 30.0487C15.0864 30.2577 15.3345 30.4235 15.6075 30.5366C15.8805 30.6497 16.1731 30.7079 16.4686 30.7079C16.7641 30.7079 17.0568 30.6497 17.3298 30.5366C17.6028 30.4235 17.8509 30.2577 18.0598 30.0487L29.9679 18.1406C30.1769 17.9317 30.3427 17.6836 30.4558 17.4106C30.5689 17.1376 30.6271 16.845 30.6271 16.5494C30.6271 16.2539 30.5689 15.9613 30.4558 15.6883C30.3427 15.4153 30.1769 15.1672 29.9679 14.9583ZM7.56495 9.33326C7.2312 9.33326 6.90494 9.23429 6.62743 9.04887C6.34992 8.86344 6.13363 8.59989 6.00591 8.29154C5.87818 7.98319 5.84476 7.64389 5.90988 7.31655C5.97499 6.9892 6.13571 6.68852 6.37171 6.45252C6.60771 6.21652 6.90839 6.0558 7.23574 5.99069C7.56308 5.92558 7.90238 5.95899 8.21073 6.08672C8.51908 6.21444 8.78263 6.43073 8.96806 6.70824C9.15348 6.98575 9.25245 7.31201 9.25245 7.64576C9.25245 8.09332 9.07466 8.52254 8.7582 8.83901C8.44173 9.15547 8.01251 9.33326 7.56495 9.33326Z"
        fill="#1AD598"
      />
    </svg>
  )
}
export default RewardSection
